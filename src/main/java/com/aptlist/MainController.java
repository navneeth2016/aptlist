package com.aptlist;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import java.util.ArrayList;
import java.util.Collection;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.stream.Collectors;

@Controller	// This means that this class is a Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class MainController {
	@Autowired // This means to get the bean called userRepository
			   // Which is auto-generated by Spring, we will use it to handle the data
	private UserRepository userRepository;

	@PostMapping(path="/add") // Map ONLY POST Requests
	public @ResponseBody String addNewUser (@RequestParam String name
			, @RequestParam String email) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request

		User n = new User();
		n.setName(name);
		n.setEmail(email);
		userRepository.save(n);
		return "Saved";
	}

	@PostMapping(path="/group")
	public @ResponseBody Collection<List<String>>  getAllUsers(@RequestParam int groupsize) {
		// This returns a JSON or XML with the users
		if(groupsize <=2){
			return null;
		}
		Iterable<User> user =  userRepository.findAll();
        List<String> employees = new ArrayList<>();

		final AtomicInteger counter = new AtomicInteger();

		user.forEach(user1 -> {
			employees.add(user1.getName());
		});

		Collections.shuffle(employees);
		final Collection<List<String>> allgroups =
				employees.stream().distinct().collect(Collectors.groupingBy(it ->
						counter.getAndIncrement() % groupsize)).values();

		return allgroups;
	}
}
